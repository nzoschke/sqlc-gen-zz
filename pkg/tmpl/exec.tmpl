{{if gt (len .Params) 1}}
type {{.Name}}In struct {
  {{- range .Params}}
    {{camel .Column.Name}} {{gotype .Column}} `json:"{{.Column.Name}}"`
  {{- end}}
}
{{end}}

func {{.Name}}(tx *sqlite.Conn {{inarg .Name .Params }}) (error) {
  stmt := tx.Prep(`{{.Text}}`)
  defer stmt.Reset()

  {{if eq (len .Params) 1}}
  {{ $p := index .Params 0 }}
  stmt.Bind{{dbtype $p.Column.Type.Name}}(1, {{$p.Column.Name}})
  {{else if gt (len .Params) 1}}
    {{- range .Params}}
  stmt.Bind{{dbtype .Column.Type.Name}}({{.Number}}, in.{{camel .Column.Name}})
    {{- end}}
  {{end}}

  _, err := stmt.Step()
  if err != nil {
    return err
  }

  return nil
}